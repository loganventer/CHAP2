FROM mcr.microsoft.com/dotnet/aspnet:9.0 AS base
WORKDIR /app

# Install curl for connectivity testing
RUN apt-get update && apt-get install -y curl && rm -rf /var/lib/apt/lists/*

EXPOSE 5000

FROM mcr.microsoft.com/dotnet/sdk:9.0 AS build
WORKDIR /src

# Copy the web portal specific .dockerignore to ensure proper build context
COPY ["langchain_search_service/.dockerignore.webportal", ".dockerignore"]

# Copy only the necessary project files first
COPY ["CHAP2.Domain/CHAP2.Domain.csproj", "CHAP2.Domain/"]
COPY ["CHAP2.Shared/CHAP2.Shared.csproj", "CHAP2.Shared/"]
COPY ["CHAP2.Application/CHAP2.Application.csproj", "CHAP2.Application/"]
COPY ["CHAP2.Infrastructure/CHAP2.Infrastructure.csproj", "CHAP2.Infrastructure/"]
COPY ["CHAP2.UI/CHAP2.WebPortal/CHAP2.Web.csproj", "CHAP2.UI/CHAP2.WebPortal/"]

# Restore dependencies
RUN dotnet restore "CHAP2.UI/CHAP2.WebPortal/CHAP2.Web.csproj"

# Copy source code
COPY CHAP2.Domain/ CHAP2.Domain/
COPY CHAP2.Shared/ CHAP2.Shared/
COPY CHAP2.Application/ CHAP2.Application/
COPY CHAP2.Infrastructure/ CHAP2.Infrastructure/
COPY CHAP2.UI/CHAP2.WebPortal/ CHAP2.UI/CHAP2.WebPortal/

# Build the web portal project
WORKDIR "/src/CHAP2.UI/CHAP2.WebPortal"
RUN dotnet build "CHAP2.Web.csproj" -c Release -o /app/build

FROM build AS publish
RUN dotnet publish "CHAP2.Web.csproj" -c Release -o /app/publish

FROM base AS final
WORKDIR /app
COPY --from=publish /app/publish .
ENTRYPOINT ["dotnet", "CHAP2.Web.dll"] 